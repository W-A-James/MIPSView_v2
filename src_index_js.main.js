"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["src_index_js"],{

/***/ "../sim/pkg/mips_sim_bg.js":
/*!*********************************!*\
  !*** ../sim/pkg/mips_sim_bg.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ALUOperation\": () => (/* binding */ ALUOperation),\n/* harmony export */   \"ALUSrc\": () => (/* binding */ ALUSrc),\n/* harmony export */   \"BranchType\": () => (/* binding */ BranchType),\n/* harmony export */   \"JumpType\": () => (/* binding */ JumpType),\n/* harmony export */   \"Memory\": () => (/* binding */ Memory),\n/* harmony export */   \"RegDest\": () => (/* binding */ RegDest),\n/* harmony export */   \"RegSrc\": () => (/* binding */ RegSrc),\n/* harmony export */   \"Register\": () => (/* binding */ Register),\n/* harmony export */   \"__wbg_parse_8217e7299bf72f3d\": () => (/* binding */ __wbg_parse_8217e7299bf72f3d),\n/* harmony export */   \"__wbindgen_debug_string\": () => (/* binding */ __wbindgen_debug_string),\n/* harmony export */   \"__wbindgen_object_drop_ref\": () => (/* binding */ __wbindgen_object_drop_ref),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw),\n/* harmony export */   \"get_state\": () => (/* binding */ get_state),\n/* harmony export */   \"init_sim\": () => (/* binding */ init_sim),\n/* harmony export */   \"load_binary\": () => (/* binding */ load_binary),\n/* harmony export */   \"step\": () => (/* binding */ step),\n/* harmony export */   \"step_to_halt\": () => (/* binding */ step_to_halt)\n/* harmony export */ });\n/* harmony import */ var _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mips_sim_bg.wasm */ \"../sim/pkg/mips_sim_bg.wasm\");\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__]);\n_mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(_mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n*/\nfunction init_sim() {\n    _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.init_sim();\n}\n\n/**\n* @param {number} n\n*/\nfunction step(n) {\n    _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.step(n);\n}\n\n/**\n*/\nfunction step_to_halt() {\n    _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.step_to_halt();\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(_mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint32Array} instrs\n* @param {Uint32Array} data\n* @param {number} entry_point\n*/\nfunction load_binary(instrs, data, entry_point) {\n    const ptr0 = passArray32ToWasm0(instrs, _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(data, _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.load_binary(ptr0, len0, ptr1, len1, entry_point);\n}\n\n/**\n* @returns {any}\n*/\nfunction get_state() {\n    const ret = _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.get_state();\n    return takeObject(ret);\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nconst ALUSrc = Object.freeze({ Zero:0,\"0\":\"Zero\",Reg1:1,\"1\":\"Reg1\",Reg2:2,\"2\":\"Reg2\",Muldivhi:3,\"3\":\"Muldivhi\",Muldivlo:4,\"4\":\"Muldivlo\",PcPlus4:5,\"5\":\"PcPlus4\",SignExtImm:6,\"6\":\"SignExtImm\",ZeroExtImm:7,\"7\":\"ZeroExtImm\",Shamt:8,\"8\":\"Shamt\", });\n/**\n*/\nconst ALUOperation = Object.freeze({ ADD:0,\"0\":\"ADD\",ADDU:1,\"1\":\"ADDU\",SUB:2,\"2\":\"SUB\",SUBU:3,\"3\":\"SUBU\",MUL:4,\"4\":\"MUL\",MULU:5,\"5\":\"MULU\",MULT:6,\"6\":\"MULT\",MULTU:7,\"7\":\"MULTU\",DIV:8,\"8\":\"DIV\",DIVU:9,\"9\":\"DIVU\",XOR:10,\"10\":\"XOR\",NOR:11,\"11\":\"NOR\",AND:12,\"12\":\"AND\",OR:13,\"13\":\"OR\",SLT:14,\"14\":\"SLT\",SLTU:15,\"15\":\"SLTU\",LUI:16,\"16\":\"LUI\",SRL:17,\"17\":\"SRL\",SLL:18,\"18\":\"SLL\",SRA:19,\"19\":\"SRA\",CLO:20,\"20\":\"CLO\",CLZ:21,\"21\":\"CLZ\", });\n/**\n*/\nconst RegDest = Object.freeze({ Rt:0,\"0\":\"Rt\",Rd:1,\"1\":\"Rd\",MulDivHi:2,\"2\":\"MulDivHi\",MulDivLo:3,\"3\":\"MulDivLo\",Ra:4,\"4\":\"Ra\",XXX:5,\"5\":\"XXX\", });\n/**\n*/\nconst BranchType = Object.freeze({ Beq:0,\"0\":\"Beq\",Bgez:1,\"1\":\"Bgez\",Bgezal:2,\"2\":\"Bgezal\",Bgtz:3,\"3\":\"Bgtz\",Blez:4,\"4\":\"Blez\",Bltzal:5,\"5\":\"Bltzal\",Bltz:6,\"6\":\"Bltz\",Bne:7,\"7\":\"Bne\",XXX:8,\"8\":\"XXX\", });\n/**\n*/\nconst JumpType = Object.freeze({ J:0,\"0\":\"J\",Jal:1,\"1\":\"Jal\",Jr:2,\"2\":\"Jr\",Jalr:3,\"3\":\"Jalr\",XXX:4,\"4\":\"XXX\", });\n/**\n*/\nconst Register = Object.freeze({ ZERO:0,\"0\":\"ZERO\",AT:1,\"1\":\"AT\",V0:2,\"2\":\"V0\",V1:3,\"3\":\"V1\",A0:4,\"4\":\"A0\",A1:5,\"5\":\"A1\",A2:6,\"6\":\"A2\",A3:7,\"7\":\"A3\",T0:8,\"8\":\"T0\",T1:9,\"9\":\"T1\",T2:10,\"10\":\"T2\",T3:11,\"11\":\"T3\",T4:12,\"12\":\"T4\",T5:13,\"13\":\"T5\",T6:14,\"14\":\"T6\",T7:15,\"15\":\"T7\",S0:16,\"16\":\"S0\",S1:17,\"17\":\"S1\",S2:18,\"18\":\"S2\",S3:19,\"19\":\"S3\",S4:20,\"20\":\"S4\",S5:21,\"21\":\"S5\",S6:22,\"22\":\"S6\",S7:23,\"23\":\"S7\",T8:24,\"24\":\"T8\",T9:25,\"25\":\"T9\",K0:26,\"26\":\"K0\",K1:27,\"27\":\"K1\",GP:28,\"28\":\"GP\",SP:29,\"29\":\"SP\",FP:30,\"30\":\"FP\",RA:31,\"31\":\"RA\",HI:32,\"32\":\"HI\",LO:33,\"33\":\"LO\", });\n/**\n*/\nconst RegSrc = Object.freeze({ Rt:0,\"0\":\"Rt\",Rs:1,\"1\":\"Rs\",XXX:2,\"2\":\"XXX\", });\n/**\n*/\nclass Memory {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_memory_free(ptr);\n    }\n}\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbg_parse_8217e7299bf72f3d() { return handleError(function (arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nfunction __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr0 = passStringToWasm0(ret, _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc, _mips_sim_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/../sim/pkg/mips_sim_bg.js?");

/***/ }),

/***/ "./src/component.js":
/*!**************************!*\
  !*** ./src/component.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": () => (/* binding */ Component),\n/* harmony export */   \"Connector\": () => (/* binding */ Connector),\n/* harmony export */   \"PATH_WIDTH\": () => (/* binding */ PATH_WIDTH),\n/* harmony export */   \"SHAPE\": () => (/* binding */ SHAPE)\n/* harmony export */ });\n/* harmony import */ var _svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @svgdotjs/svg.js */ \"./node_modules/@svgdotjs/svg.js/dist/svg.esm.js\");\n\n\nconst PATH_WIDTH = 1;\n// TODO: Pick colours for control and data path signals\n// TODO: Pick widths for datapath connections and control connections\n// TODO: Add different shapes to allow for eg: ovals, etc\n// todo\nlet CONTROL_OUTLINE = \"#f00\";\nlet CONTROL_FILL = \"#FFF\";\n\nlet DATA_PATH_OUTLINE = \"#000\";\nlet DATA_PATH_FILL = \"#FFF\";\n\nconst ROOT3OVER2 = Math.sqrt(3) / 2;\nlet shapeCount = 0;\nlet connCount = 0;\n\nclass Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  scale(s) {\n    return new Vector(this.x / s, this.y / s);\n  }\n\n  perpendicular() {\n    return new Vector(this.y, -this.x);\n  }\n\n  len() {\n    return Math.sqrt((this.x * this.x) + (this.y * this.y));\n  }\n\n  getUnit() {\n    let scale = 1 / this.len();\n    return this.scale(scale);\n  }\n\n  dot(other) {\n    return this.x * other.x + this.y * other.y;\n  }\n}\n\nfunction vec_scale(v, s) {\n  return {\n    x: v.x * s,\n    y: v.y * s\n  };\n}\n\nfunction vec_perpendicular(v) {\n  return {\n    x: v.y,\n    y: -v.x\n  };\n}\n\nfunction vec_len(v) {\n  return Math.sqrt((v.x * v.x) + (v.y * v.y))\n}\n\nfunction get_unit_vec(v) {\n  let len = vec_len(v);\n  return vec_scale(v, 1 / len);\n}\n\nfunction vec_dot_prod(u, v) {\n  return u.x * v.x + u.y * v.y;\n}\n\n\nfunction vec_rotate(u, theta, origin = { x: 0, y: 0 }) {\n  let xLessOrig = u.x - origin.x;\n  let yLessOrig = u.y - origin.y;\n  let cTheta = Math.cos(theta);\n  let sTheta = Math.sin(theta);\n  let shiftedX = xLessOrig * cTheta + yLessOrig * -sTheta;\n  let shiftedY = xLessOrig * sTheta + yLessOrig * cTheta;\n\n  return { x: shiftedX + origin.x, y: shiftedY + origin.y };\n}\nfunction vec_get_unit_vec_offset_by_45(v, origin = { x: 0, y: 0 }) {\n  // Check if original vector is vertical\n  let unit = get_unit_vec(v);\n  let rotUnit = vec_rotate(unit, Math.PI / 4.0, origin);\n\n  return vec_scale(rotUnit, vec_len(v));\n}\n\n// TODO: Add end and start labels\nclass Connector {\n  constructor(owner, path, weight = PATH_WIDTH, markers = { start: false, end: true, startText: null, endText: null, busWidth: 1 }, style = { color: \"#000\" }) {\n    this.owner = owner;\n    this.path = path;\n    this.line_weight = weight;\n    if (style) {\n      style = Object.assign({ color: \"#000\" }, style);\n    }\n    this.colour = style.color;\n    if (markers) {\n      markers = Object.assign({ start: false, end: true, startText: null, endText: null, busWidth: 1 }, markers);\n      this.markerStart = markers.start ? markers.start : false;\n      this.markerEnd = markers.end ? markers.end : false;\n      this.markerStartText = markers.startText ? markers.startText : \"\";\n      this.markerEndText = markers.endText ? markers.endText : \"\";\n      if (markers.busWidth > 1) {\n        this.busWidth = markers.busWidth;\n      }\n    }\n    this.count = connCount;\n    connCount++;\n  }\n\n  static horizontal(owner, startX, endX, y, weight, markers = { start: false, end: true, startText: null, endText: null }, style = { color: \"#000\" }) {\n    return new Connector(owner, [startX, y, endX, y], weight, markers, style);\n  }\n\n  static vertical(owner, startY, endY, x, weight, markers = { start: false, end: true, startText: null, endText: null }, style = { color: \"#000\" }) {\n    return new Connector(owner, [x, startY, x, endY], weight, markers, style);\n  }\n\n  get_end_marker_path(absolute_path, len) {\n    let last_points = absolute_path.slice(-4);\n\n    let ps = { x: last_points[0], y: last_points[1] };\n    let p1 = { x: last_points[2], y: last_points[3] };\n    let U = { x: p1.x - ps.x, y: p1.y - ps.y };\n    let u = vec_scale(U, 1.0 / vec_len(U));\n    let v = vec_perpendicular(u);\n    let p0 = {\n      x: p1.x + (v.x * len / 2) - (u.x * ROOT3OVER2 * len),\n      y: p1.y + (v.y * len / 2) - (u.y * ROOT3OVER2 * len)\n    };\n\n    let p2 = {\n      x: p1.x - (v.x * len / 2) - (u.x * ROOT3OVER2 * len),\n      y: p1.y - (v.y * len / 2) - (u.y * ROOT3OVER2 * len)\n    };\n\n    return [p1.x, p1.y, p2.x, p2.y, p0.x, p0.y];\n  }\n\n  draw() {\n    let frame = document.getElementById(this.owner.target_element.substr(1));\n    let drawing_width = frame.clientWidth;\n    let drawing_height = frame.clientHeight;\n\n    let i = 0;\n    let new_path = this.path.map(e => {\n      let rv;\n      if (i % 2 === 0) {\n        rv = e * drawing_width;\n      }\n      else {\n        rv = e * drawing_height;\n      }\n      i += 1;\n      return rv;\n    });\n\n    let l = this.owner.drawing.polyline(new_path)\n      .stroke(\n        {\n          width: this.line_weight,\n          color: this.colour,\n        }\n      )\n      .fill('none')\n      .attr({ \"id\": `conn_${this.count}` })\n\n    if (this.markerEnd) {\n      let p = this.get_end_marker_path(new_path, 6);\n      this.owner.drawing.polygon(p).stroke(this.colour).fill(this.colour);\n    }\n\n    if (this.markerStart) {\n      l.marker(\"start\", 6, 6, add => {\n        add.circle(6).stroke(this.colour).fill(this.colour)\n      });\n    }\n\n    if (this.markerStartText) {\n      let startText = this.owner.drawing\n        .text(this.markerStartText)\n        .font(\"anchor\", \"right\")\n        .addClass(\"component-label\");\n      let bbox = startText.node.getBoundingClientRect();\n      startText = startText\n        .y(new_path[1] - bbox.height / 2)\n        .x(new_path[0] - bbox.width);\n    }\n\n    if (this.markerEndText) {\n      let x_diff = Math.abs(new_path[new_path.length - 4] - new_path[new_path.length - 2]);\n      if (x_diff > 0.1) {\n        // Horizontal\n        let endText = this.owner.drawing\n          .text(this.markerEndText)\n          .x(new_path[new_path.length - 2])\n          .font(\"anchor\", \"left\")\n          .addClass(\"component-label\");\n\n        let bbox = endText.node.getBoundingClientRect();\n        endText = endText\n          .y(new_path[new_path.length - 1] - bbox.height / 2);\n      } else {\n        // Vertical\n        let endText = this.owner.drawing\n          .text(this.markerEndText)\n          .x(new_path[new_path.length - 2])\n          .font(\"anchor\", \"middle\")\n          .addClass(\"component-label\");\n\n        let bbox = endText.node.getBoundingClientRect();\n        endText = endText\n          .y(new_path[new_path.length - 1] - bbox.height);\n      }\n    }\n\n    if (this.busWidth) {\n      let l = new_path.length;\n      // Get 45 degree cross and draw text with busWidth\n      let baseVec = { x: new_path[l - 2] - new_path[l - 4], y: new_path[l - 1] - new_path[l - 3] };\n      let orig = { x: (new_path[l - 2] + new_path[l - 4]) / 2, y: (new_path[l - 1] + new_path[l - 3]) / 2 };\n      let unit = get_unit_vec(baseVec);\n      let rotUnit = vec_rotate(unit, Math.PI / 4, orig);\n      // TODO: Get point below, att rotUnit to get point above\n    }\n    // TODO: Add Labels\n  }\n}\n\nconst SHAPE = {\n  CIRCLE: \"CIRCLE\",\n  BOX: \"BOX\",\n  ARITH: \"ARITH\",\n  AND: \"AND\"\n};\n\nconst LAMBDA = 0.3;\nconst PHI = 0.333333;\n// TODO: Update constructor to include tooltip \n\n// Onclick always shows/hides the tooltip, what should be parametrized as a function\n// is the content of the tooltip and how it is generated\nclass Component {\n  constructor(owner, spec, name, connectors,\n    shape = SHAPE.BOX, classList = \"\", tooltip = { has: false, description: \"\", updateState: () => { } }) {\n\n    this.owner = owner;\n    this.x = spec.x;\n    this.y = spec.y;\n    this.width = spec.w;\n    this.height = spec.h;\n    this.name = name;\n    this.fill = spec.fill ? spec.fill : \"#FFFFFF\";\n    this.outline = spec.outline ? spec.outline : \"#000\";\n    this.obj = null;\n    this.shape = shape;\n    this.connectors = connectors;\n    this.classList = classList;\n    this.count = shapeCount;\n    this.hasTooltip = tooltip.has;\n    this.tooltipUpdate = tooltip.updateState;\n\n    if (tooltip.has) {\n      // Create main tooltip div\n      this.tooltipEl = document.createElement(\"div\");\n\n      // Create nav\n      let tooltipNav = document.createElement(\"nav\");\n      tooltipNav.className = \"tooltip_nav\";\n\n      // Create description/state tabs\n      let tooltipNavShowState = document.createElement(\"button\");\n      tooltipNavShowState.innerText = \"State\";\n      tooltipNavShowState.className = \"tooltip_nav_button\";\n\n      let tooltipNavShowDesc = document.createElement(\"button\");\n      tooltipNavShowDesc.innerText = \"Desc.\";\n      tooltipNavShowDesc.className = \"tooltip_nav_button\";\n\n      let tooltipNavClose = document.createElement(\"button\");\n      tooltipNavClose.innerText = \"X\";\n      tooltipNavClose.className = \"tooltip_nav_button\";\n      tooltipNavClose.style.backgroundColor = \"red\";\n\n\n      let tooltipDisplay = document.createElement(\"div\");\n      tooltipDisplay.className = \"tooltip_display\";\n\n      // Create state div\n      let stateDiv = document.createElement(\"div\");\n      stateDiv.classList.add(\"tooltip_state\");\n      // Create description div\n      let descrDiv = document.createElement(\"div\");\n      descrDiv.classList.add(\"tooltip_descr\", \"invisible\");\n      descrDiv.innerHTML = tooltip.description ? tooltip.description : \"\";\n\n\n      this.tooltipEl.append(tooltipNav, tooltipDisplay);\n      tooltipNav.append(tooltipNavShowState, tooltipNavShowDesc, tooltipNavClose);\n      tooltipDisplay.append(stateDiv, descrDiv);\n\n      // TODO: Highlight currently selected view\n      tooltipNavShowState.onclick = () => {\n        this.tooltipEl.getElementsByClassName(\"tooltip_state\")[0].classList.remove(\"invisible\");\n        this.tooltipEl.getElementsByClassName(\"tooltip_descr\")[0].classList.add(\"invisible\");\n        this.updateToolTip();\n\n      };\n      tooltipNavShowDesc.onclick = () => {\n        this.tooltipEl.getElementsByClassName(\"tooltip_state\")[0].classList.add(\"invisible\");\n        this.tooltipEl.getElementsByClassName(\"tooltip_descr\")[0].classList.remove(\"invisible\");\n        this.updateToolTip();\n      };\n\n      tooltipNavClose.onclick = () => {\n        this.tooltipEl.classList.toggle(\"invisible\");\n      };\n\n\n      let tooltipID = `shape${shapeCount}_tooltip`;\n\n      this.tooltipEl.classList.add(\"tooltip\", \"invisible\", \"tooltip_outer\");\n      this.tooltipEl.id = tooltipID;\n      document.getElementById(this.owner.target_element.substr(1)).append(this.tooltipEl);\n      this.onclick = () => this.toggleTooltip();\n    }\n\n    shapeCount++;\n  }\n\n  toggleTooltip() {\n    this.tooltipEl.classList.toggle(\"invisible\");\n    this.updateToolTip();\n  }\n\n  updateToolTip() {\n    if (this.hasTooltip) {\n      // Delete tooltip state content\n      let content = this.tooltipUpdate();\n\n      if (content) {\n        let state = this.tooltipEl.getElementsByClassName(\"tooltip_state\")[0];\n        state.innerHTML = \"\";\n        state.append(content);\n      }\n    }\n  }\n\n  convertRelativeToPixels(relativeX, relativeY) {\n    let frame = document.getElementById(this.owner.target_element.substr(1));\n    let drawing_width = frame.clientWidth;\n    let drawing_height = frame.clientHeight;\n\n    return {\n      x: relativeX > 1 ? relativeX : relativeX * drawing_width,\n      y: relativeY > 1 ? relativeY : relativeY * drawing_height\n    };\n  }\n\n  setFill(fill) {\n    this.fill = fill;\n  }\n\n  setOutline(outline) {\n    this.outline = outline;\n  }\n\n  get_arith_pts(x, y, w, h, lambda, phi) {\n    let l = lambda * w;\n    let p = phi * h;\n\n    return [\n      x, y,\n      x + w, y + ((h - p) / 2),\n      x + w, y + ((h - p) / 2) + p,\n      x, y + h,\n      x, y + h - ((h - p) / 2),\n      x + l, y + (h / 2),\n      x, y + ((h - p) / 2)\n    ];\n  }\n\n  get_and_path(x, y, w, h, dir) {\n    let r;\n    let c;\n    let s;\n    let path;\n    switch (dir) {\n      case \"left\":\n        r = h / 2;\n        path = `m${r},${0} h${w - r} v-${h} h-${w - r} a${r},${r} 0 0,0 0,${h} z`;\n        break;\n      case \"right\":\n        r = h / 2;\n        c = { x: x + w - r, y: y + r };\n        s = { x: x, y: y };\n        break;\n      default:\n        console.error(\"Invalid and path direction\");\n    }\n\n    this.obj = this.owner.drawing.path(path)\n      .attr({\n        \"fill-opacity\": 0.0,\n        \"stroke-opacity\": 1.0,\n        \"stroke\": \"#000\",\n      })\n      .x(x)\n      .y(y);\n  }\n\n  draw() {\n    let loc = this.convertRelativeToPixels(this.x, this.y);\n    let size = this.convertRelativeToPixels(this.width, this.height);\n    switch (this.shape) {\n      case SHAPE.ARITH:\n        let pts = this.get_arith_pts(loc.x, loc.y, size.x, size.y, LAMBDA, PHI);\n        this.obj = this.owner.drawing.polygon(pts)\n          .attr(\n            {\n              'fill-opacity': 0.0,\n              'stroke-opacity': 1.0\n            }\n          )\n          .fill(this.fill)\n          .stroke(this.outline)\n        break;\n      case SHAPE.CIRCLE:\n        this.obj = this.owner.drawing.ellipse(size.x, size.y)\n          .attr({\n            'fill-opacity': 0.0,\n            'stroke-opacity': 1.0\n          })\n          .x(loc.x)\n          .y(loc.y)\n          .fill(this.fill)\n          .stroke(this.outline)\n        break;\n      case SHAPE.AND:\n        this.get_and_path(loc.x, loc.y, size.x, size.y, \"left\");\n        break;\n      default:\n        this.obj = this.owner.drawing.rect(size.x, size.y)\n          .attr({\n            'fill-opacity': 0.0,\n            'stroke-opacity': 1.0\n          })\n          .x(loc.x)\n          .y(loc.y)\n          .fill(this.fill)\n          .stroke(this.outline)\n    }\n\n    this.obj = this.obj.attr({ \"id\": `shape_${this.count}` });\n    if (this.onclick) this.obj.click(this.onclick);\n    this.classList.split(\" \").forEach(c => this.obj.addClass(c));\n    // Calculate center and draw text at center\n    let center = {\n      x: loc.x + size.x / 2,\n      y: loc.y + size.y / 2\n    };\n    // draw text\n    // TODO: center label\n    this.text = this.owner.drawing\n      .text(this.name)\n      .x(center.x)\n      .font(\"anchor\", \"middle\")\n      .font(\"weight\", \"bold\")\n      .font(\"size\", 12)\n      .font(\"family\", \"sans-serif\")\n\n    //let top_bar = \n    if (this.tooltipEl) {\n      this.tooltipEl.style.top = `${loc.y}px`;\n      this.tooltipEl.style.left = `${loc.x}px`;\n    }\n    let bbox = this.text.node.getBoundingClientRect();\n    let h = (bbox.height);\n    this.text = this.text\n      .y(center.y - h / 2);\n\n    this.connectors.forEach(c => c.draw());\n  }\n}\n\n\n\n\n//# sourceURL=webpack://create-wasm-app/./src/component.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mips_sim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mips_sim */ \"../sim/pkg/mips_sim_bg.js\");\n/* harmony import */ var _sim_render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sim_render */ \"./src/sim_render.js\");\n/* harmony import */ var _state_view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state_view */ \"./src/state_view.js\");\n/* harmony import */ var _sample_programs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sample_programs */ \"./src/sample_programs.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([mips_sim__WEBPACK_IMPORTED_MODULE_3__]);\nmips_sim__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nlet simulator_diag;\nlet programLoaded = false;\nlet showRegView = true;\nlet lastBinary = null;\nlet steps;\nlet fps;\n\nlet SINGLE_STEP_BUTTON;\nlet STEP_BUTTON;\nlet STEP_TO_HALT_BUTTON;\nlet REGVALS_LIST;\nlet MEMVALS_LIST;\nlet REGVIEW_BUTTON;\nlet LOAD_BINARY_VIEW_BUTTON;\nlet RELOAD_BUTTON;\nlet RETURN_TO_MODEL_BUTTON;\nlet LOAD_PROGRAM_BUTTON;\n\nlet NUM_STEPS_INPUT;\n\nlet SAMPLE_PROGRAM_CONTAINER;\nlet SOURCE_VIEW_CONTAINER;\nlet SAMPLE_PROGRAM_LIST;\n\nlet MODEL_CONTAINER;\nlet STATE_CONTAINER;\n\nconst MODEL_SELECTOR = \"#model\";\n\nconst MAX_STEPS = 100;\nconst MIN_STEPS = 1;\n\nclass FPS {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.times = [];\n    this.start = null;\n    this.done = false;\n  }\n\n  tick() {\n    if (!this.done)\n      this.start = performance.now()\n  }\n\n  tock() {\n    if (!this.done) {\n      let delta = performance.now() - this.start;\n      this.times.push(delta);\n      if (this.times.length > 100) {\n        this.times.shift();\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"http://localhost:8088\");\n        xhr.setRequestHeader(\"content-type\", \"text/plain\");\n        xhr.send(JSON.stringify({ times_ms: this.times }));\n        this.times = [];\n      }\n\n      let min = Infinity;\n      let max = -Infinity;\n      let sum = 0;\n      this.times.forEach(t => {\n        min = Math.min(min, t);\n        max = Math.max(max, t);\n        sum += t;\n      });\n\n      let mean = sum / this.times.length;\n      this.fps.textContent = `\n    Update Times:\nlatest = ${Math.round(delta)}ms\navg of last ${this.times.length} = ${Math.round(mean)}\nmin of last ${this.times.length} = ${Math.round(min)}\nmax of last ${this.times.length} = ${Math.round(max)}\n`.trim();\n    }\n\n  }\n\n\n}\n\n\nfunction getDOMHandles() {\n  SINGLE_STEP_BUTTON = document.getElementById(\"single_step_button\");\n  STEP_BUTTON = document.getElementById(\"step_button\");\n  STEP_TO_HALT_BUTTON = document.getElementById(\"step_to_halt_button\");\n  REGVALS_LIST = document.getElementById(\"regvals\");\n  MEMVALS_LIST = document.getElementById(\"memvals\");\n  REGVIEW_BUTTON = document.getElementById(\"regview-button\");\n  LOAD_BINARY_VIEW_BUTTON = document.getElementById(\"load_binary_button\");\n  RELOAD_BUTTON = document.getElementById(\"reload_button\");\n  NUM_STEPS_INPUT = document.getElementById(\"num_steps\");\n  SAMPLE_PROGRAM_CONTAINER = document.getElementById(\"sample_program_container\");\n  MODEL_CONTAINER = document.getElementById(\"model_container\");\n  STATE_CONTAINER = document.getElementById(\"state_container\");\n  RETURN_TO_MODEL_BUTTON = document.getElementById(\"return_to_model\")\n  LOAD_PROGRAM_BUTTON = document.getElementById(\"load_selected_program\");\n  SOURCE_VIEW_CONTAINER = document.getElementById(\"source_view\");\n  SAMPLE_PROGRAM_LIST = document.getElementById(\"sample_program_list\");\n  document.getElementById(\"fps\").classList.add(\"invisible\");\n\n  //fps = new FPS();\n}\n\nfunction init_ui_event_handlers() {\n\n  // Advance simulator by one cycle\n  SINGLE_STEP_BUTTON.onclick = function() {\n    mips_sim__WEBPACK_IMPORTED_MODULE_3__.step(1);\n    update();\n  }\n\n\n  // Ensure that value in NUM_STEPS_INPUT.value is within legal range\n  NUM_STEPS_INPUT.onchange = function() {\n    let v = NUM_STEPS_INPUT.value;\n    steps = Number.parseInt(v);\n    if (steps > MAX_STEPS) {\n      steps = MAX_STEPS;\n      NUM_STEPS_INPUT.value = `${MAX_STEPS}`;\n    }\n    else if (steps < MIN_STEPS) {\n      steps = 1;\n      NUM_STEPS_INPUT.value = `${MIN_STEPS}`;\n    } else if (isNaN(steps)) {\n      NUM_STEPS_INPUT.value = `${MIN_STEPS}`;\n    } else if (v.includes(\".\")) {\n      NUM_STEPS_INPUT.value = steps.toString();\n    }\n  };\n\n\n  // Read value from input and advance simulator by that many cycles\n  STEP_BUTTON.onclick = function() {\n    let v = NUM_STEPS_INPUT.value;\n    v = Number.parseInt(v);\n\n    mips_sim__WEBPACK_IMPORTED_MODULE_3__.step(v);\n    update();\n  };\n\n  // TODO: Add a timeout here if running for too long\n  STEP_TO_HALT_BUTTON.onclick = function() {\n    if (programLoaded) {\n      mips_sim__WEBPACK_IMPORTED_MODULE_3__.step_to_halt();\n      update();\n    }\n  };\n\n  // Ensure that model is resized when the document is resized\n  document.body.onresize = (_) => {\n    simulator_diag.draw();\n  };\n\n  // Swap visibility of REGVALS and MEMVALS in state view\n  REGVIEW_BUTTON.onclick = function() {\n    REGVALS_LIST.classList.toggle(\"invisible\");\n    MEMVALS_LIST.classList.toggle(\"invisible\");\n    showRegView = !showRegView;\n  };\n\n  let toggleLoadBinaryView = function() {\n    SAMPLE_PROGRAM_CONTAINER.classList.toggle(\"invisible\");\n\n    MODEL_CONTAINER.classList.toggle(\"invisible\");\n    STATE_CONTAINER.classList.toggle(\"invisible\");\n  };\n  // Switch between model view and load binary view\n  LOAD_BINARY_VIEW_BUTTON.onclick = toggleLoadBinaryView;\n  RETURN_TO_MODEL_BUTTON.onclick = () => {\n    toggleLoadBinaryView();\n    simulator_diag.draw();\n  }\n\n  LOAD_PROGRAM_BUTTON.onclick = () => {\n    let selectedBinary;\n    for (const b of _sample_programs__WEBPACK_IMPORTED_MODULE_2__.PROGRAMS) {\n      if (b.name == currentlySelectedBinary) {\n        selectedBinary = b;\n        break;\n      }\n    }\n\n    if (selectedBinary) {\n      load_binary(selectedBinary);\n      alert(`Loaded '${selectedBinary.name}'`);\n      toggleLoadBinaryView();\n      update();\n    }\n    else {\n      alert(`Failed to load binary`);\n    }\n\n  };\n\n  // Reinitialize the simulator\n  RELOAD_BUTTON.onclick = (_) => {\n    reinit();\n    update();\n    simulator_diag.draw();\n  };\n};\n\nconst BinaryNameSourceMap = {};\nlet currentlySelectedBinary = _sample_programs__WEBPACK_IMPORTED_MODULE_2__.PROGRAMS[0].name;\n\nfunction populateLoadBinaryView() {\n  _sample_programs__WEBPACK_IMPORTED_MODULE_2__.PROGRAMS.forEach(p => {\n    let entrySpan = document.createElement(\"span\");\n    entrySpan.classList.add(\"program-entries\");\n    entrySpan.id = p.name;\n    entrySpan.innerText = p.name;\n\n    let key = entrySpan.id;\n\n    let sourceDiv = document.createElement(\"div\");\n    sourceDiv.classList.add(\"invisible\");\n    p.src.split(/\\r?\\n/).forEach(line => {\n      let codeSpan = document.createElement(\"span\");\n      codeSpan.classList.add(\"code-line\");\n      codeSpan.innerText = line;\n\n      sourceDiv.append(codeSpan);\n    });\n\n    entrySpan.onclick = function(e) {\n      let newKey = e.target.id;\n      if (currentlySelectedBinary !== newKey) {\n        document.getElementById(currentlySelectedBinary).classList.remove(\"entry-selected\");\n        e.target.classList.add(\"entry-selected\");\n\n        BinaryNameSourceMap[currentlySelectedBinary].classList.add(\"invisible\");\n        BinaryNameSourceMap[newKey].classList.remove(\"invisible\");\n        currentlySelectedBinary = newKey;\n      }\n    };\n\n    BinaryNameSourceMap[key] = sourceDiv;\n\n    SAMPLE_PROGRAM_LIST.append(entrySpan);\n    SOURCE_VIEW_CONTAINER.append(sourceDiv);\n  });\n}\n\n\nfunction load_binary(b) {\n  lastBinary = b;\n  mips_sim__WEBPACK_IMPORTED_MODULE_3__.init_sim();\n  mips_sim__WEBPACK_IMPORTED_MODULE_3__.load_binary(b.text, b.data, b.entry);\n  programLoaded = true;\n}\n\nfunction reinit() {\n  if (lastBinary) {\n    load_binary(lastBinary);\n  } else {\n    mips_sim__WEBPACK_IMPORTED_MODULE_3__.init_sim();\n  }\n}\n\nfunction start() {\n  getDOMHandles();\n\n  NUM_STEPS_INPUT.value = `${MIN_STEPS}`;\n\n  simulator_diag = new _sim_render__WEBPACK_IMPORTED_MODULE_0__.Simulator(MODEL_SELECTOR);\n  mips_sim__WEBPACK_IMPORTED_MODULE_3__.init_sim();\n  load_binary(_sample_programs__WEBPACK_IMPORTED_MODULE_2__.FIB);\n  update();\n\n  init_ui_event_handlers();\n  populateLoadBinaryView();\n\n  let defaultSampleName = _sample_programs__WEBPACK_IMPORTED_MODULE_2__.PROGRAMS[0].name;\n  let defaultSampleSource = BinaryNameSourceMap[_sample_programs__WEBPACK_IMPORTED_MODULE_2__.PROGRAMS[0].name];\n  document.getElementById(defaultSampleName).classList.add(\"entry-selected\");\n  defaultSampleSource.classList.remove(\"invisible\");\n}\n\nfunction update() {\n  //fps.tick();\n  let sim_state = mips_sim__WEBPACK_IMPORTED_MODULE_3__.get_state();\n\n  simulator_diag.update(sim_state);\n  _state_view__WEBPACK_IMPORTED_MODULE_1__.updateUiState(sim_state);\n  simulator_diag.draw();\n  //fps.tock();\n}\n\n\nstart();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/./src/index.js?");

/***/ }),

/***/ "./src/sample_programs.js":
/*!********************************!*\
  !*** ./src/sample_programs.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FIB\": () => (/* binding */ FIB),\n/* harmony export */   \"PROGRAMS\": () => (/* binding */ PROGRAMS)\n/* harmony export */ });\nconst TEXT_SECTION_START = Uint32Array.from([0x400000])[0];\nconst PROGRAMS = [];\nconst FIB = ({\n  name: \"fib\",\n  text:\n    [\n      537591817,\n      537657345,\n      537395201,\n      18469,\n      20517,\n      0,\n      291504137,\n      0,\n      0,\n      0,\n      359399434,\n      0,\n      0,\n      268435475,\n      0,\n      0,\n      16421,\n      0,\n      268435470,\n      0,\n      0,\n      0,\n      291504138,\n      0,\n      0,\n      560726015,\n      16797733,\n      17383456,\n      20989989,\n      0,\n      268500982,\n      0,\n      0,\n      0,\n      3735928559,\n      0\n    ]\n  ,\n  data:\n    [\n      0,\n      0,\n      0,\n      0,\n    ]\n  ,\n  entry: TEXT_SECTION_START,\n  src: `\n.text\n\naddi    $t3, $zero, 9     # n\naddi    $t4, $zero, 1     # constant 1\naddi    $t0, $zero, 1     # Current result\nmove    $t1, $zero        # Previous result\nmove    $t2, $zero        # temp\n\n# check if n == 0 or 1\nnop\nbeq     $t3, $zero, case_n_0\nnop\n\ncase_n_1:\n    nop\n    bne     $t3, $t4, fib_loop      # if n != 1: goto fib_loop\n    nop\n    beq     $zero, $zero, done      # goto done\n    nop\n\ncase_n_0:\n    move    $t0, $zero              # current = 0\n    nop\n    beq     $zero, $zero, done      # goto done\n    nop\n\nfib_loop:\n    nop \n    beq     $t3, $zero, done\n    nop\n    addi    $t3, $t3, -1            # n = n - 1\n    move    $t2, $t0                # tmp = current\n    add     $t0, $t0, $t1           # current = current + prev\n    move    $t1, $t2                # prev = tmp\n    nop\n    beq     $zero, $zero, fib_loop  #  goto fib_loop\n    nop\n\ndone:\n    nop\n.word 0XDEADBEEF \n  `\n});\n\nconst RUNNING_SUM = (\n  { \"entry\": 4194312, \"text\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 604505064, 8225, 8921121, 554237951, 486604797, 0, 3735928559, 0, 0, 0], \"data\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0], \"name\": \"running_sum\", \"src\": \".text\\n.global __start\\nnop\\nnop\\n\\n__start:\\n  addiu $t0, $0, 1000\\n  addu  $a0, $0, $0\\n\\nsum_loop:\\n  addu  $a0, $a0, $t0\\n  sub   $t0, $t0, 1\\n  bgt   $t0, $0, sum_loop\\n\\ndone:\\n  .word 0xDEADBEEF\\n\\n.data\\n.word 0\\n\" }\n);\n\nconst GCD = (\n  { \"entry\": 4194356, \"text\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 277151754, 0, 10749994, 337641476, 0, 10758178, 268500985, 0, 8724514, 268500982, 0, 65011720, 0, 604241998, 604307519, 599654396, 2948530176, 0, 0, 0, 0, 0, 202375168, 0, 2411659264, 0, 599588868, 3735928559], \"data\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0], \"name\": \"gcd\", \"src\": \".text\\n.globl __start\\n\\n.globl gcd\\ngcd:\\n  # a0 is a\\n  # a1 is b\\n  # while a != b\\n  #   if a \\u003e b\\n  #     a = a - b \\n  #   else\\n  #     b = b - a\\n  # return a\\n  gcd_precheck:\\n    beq $a0, $a1, gcd_done\\n    bgt $a0, $a1, gcd_a_less_b\\n\\n  gcd_b_less_a:\\n    sub $a1, $a1, $a0\\n    b gcd_precheck\\n\\n  gcd_a_less_b:\\n    sub $a0, $a0, $a1\\n    b gcd_precheck\\n\\n\\n  gcd_done:\\n    jr $ra\\n\\n.text\\n__start:\\n  li  $a0, 78\\n  li  $a1, 63\\n  sub $sp, $sp, 4\\n  sw  $ra, ($sp)\\n  nop \\n  nop\\n  nop\\n  nop\\n  nop\\n  jal gcd\\n  lw  $ra, ($sp)\\n  add $sp, $sp, 4\\n  .word 0xDEADBEEF\\n\\n.data\\n\\n\" }\n);\n\nPROGRAMS.push(FIB, RUNNING_SUM, GCD);\n\nPROGRAMS.forEach(e => {\n  e.text = Uint32Array.from(e.text);\n  e.data = Uint32Array.from(e.data);\n});\n\n\n\n\n\n//# sourceURL=webpack://create-wasm-app/./src/sample_programs.js?");

/***/ }),

/***/ "./src/sim_render.js":
/*!***************************!*\
  !*** ./src/sim_render.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Simulator\": () => (/* binding */ Simulator)\n/* harmony export */ });\n/* harmony import */ var _svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @svgdotjs/svg.js */ \"./node_modules/@svgdotjs/svg.js/dist/svg.esm.js\");\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component */ \"./src/component.js\");\n\n\n\nfunction makeBox(x, y, w, h) {\n  return { x: x, y: y, w: w, h: h, rx: x + w, by: y + h, cx: x + w / 2, cy: y + h / 2 };\n}\n\nconst CONTROL_OUTLINE = \"#0000FF\";\n\nconst REG_WIDTH = 0.04;\nconst REG_HEIGHT = 0.70;\nconst REG_Y_POS = 0.12;\n\nconst PC_SPEC = makeBox(0.07, 0.3, 0.02, 0.12);\n\nconst PC_MUX_SPEC = makeBox(0.03, 0.3, 0.02, 0.075);\nconst I_MEM_SPEC = makeBox(0.12, 0.3, 0.06, 0.12);\nconst PC_ADDER_SPEC = makeBox(0.1, 0.15, 0.06, 0.12);\nconst BRANCH_AND_SPEC = makeBox(0.15, 0.02, 0.05, 0.06);\n\nconst IF_ID_REG_SPEC = makeBox(0.2, REG_Y_POS, REG_WIDTH, REG_HEIGHT);\n\nconst HALT_SPEC = makeBox(0.05, 0.5, 0.07, 0.05);\nconst EPC_SPEC = makeBox(0.05, 0.57, 0.07, 0.05);\nconst CAUSE_SPEC = makeBox(0.05, 0.64, 0.07, 0.05);\n\nconst ID_EX_REG_SPEC = makeBox(0.475, REG_Y_POS, REG_WIDTH, REG_HEIGHT);\nconst ID_EX_REG_WB_SPEC = Object.assign(makeBox(0.475, REG_Y_POS, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\nconst ID_EX_REG_MEM_SPEC = Object.assign(makeBox(0.475, REG_Y_POS + 0.05, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\nconst ID_EX_REG_EX_SPEC = Object.assign(makeBox(0.475, REG_Y_POS + 0.1, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\n\nconst REG_FILE_SPEC = makeBox(0.31, 0.4, 0.09, 0.15);\nconst SIGN_EXT_SPEC = makeBox(0.31, 0.6, 0.042, 0.12);\n\nconst LEFT_SHIFT_2_SPEC = makeBox(0.31, 0.3, 0.03, 0.075);\nconst BRANCH_TARGET_ADDER_SPEC = makeBox(0.35, 0.22, 0.05, 0.084);\nconst CMP_SPEC = makeBox(0.40, 0.3, 0.03, 0.05);\nconst DECODE_CONTROL_SPEC = Object.assign(makeBox(0.35, 0.124, 0.045, 0.096), { outline: \"#00F\" });\n\nconst ALU_SPEC = makeBox(0.59, 0.4, 0.05, 0.16);\nconst MULDIV_SPEC = makeBox(0.59, 0.26, 0.05, 0.12);\nconst REG_DEST_MUX_SPEC = makeBox(0.54, 0.72, 0.03, 0.1);\nconst ALU_OP_2_MUX_SPEC = makeBox(0.54, 0.5, 0.03, 0.07);\n\nconst EX_MEM_REG_SPEC = makeBox(0.7, REG_Y_POS, REG_WIDTH, REG_HEIGHT);\nconst EX_MEM_REG_WB_SPEC = Object.assign(makeBox(0.7, REG_Y_POS, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\nconst EX_MEM_REG_MEM_SPEC = Object.assign(makeBox(0.7, REG_Y_POS + 0.05, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\n\nconst D_MEM_SPEC = makeBox(0.76, 0.45, 0.1, 0.15);\nconst MEM_WB_REG_SPEC = makeBox(0.88, REG_Y_POS, REG_WIDTH, REG_HEIGHT);\nconst MEM_WB_REG_WB_SPEC = Object.assign(makeBox(0.88, REG_Y_POS, REG_WIDTH, 0.05), { outline: CONTROL_OUTLINE });\nconst WB_MUX_SPEC = makeBox(0.94, 0.45, 0.03, 0.1);\n\n\nfunction genRegStateTable(simState, reg_name, field_header, value_header) {\n  let reg = simState[reg_name].current_map;\n  let table = document.createElement(\"table\");\n  let keys = Object.keys(reg).sort();\n  keys.forEach(k => {\n    let row = document.createElement(\"tr\");\n    let fieldName = document.createElement(\"td\");\n    fieldName.innerText = `${k}`;\n    let value = document.createElement(\"td\");\n    let inner = Object.keys(reg[k])[0];\n    switch (inner) {\n      case \"Op\":\n      case \"ALU\":\n      case \"Branch\":\n      case \"RSrc\":\n      case \"Dest\":\n      case \"Bool\":\n        value.innerText = `${reg[k][inner]}`;\n        break;\n      case \"U8\":\n        value.innerText = `0x${Number(reg[k][inner]).toString(16).padStart(2, 0).toUpperCase()}`;\n        break;\n      case \"U32\":\n        value.innerText = `0x${Number(reg[k][inner]).toString(16).padStart(8, 0).toUpperCase()}`;\n        break;\n      case \"U64\":\n        value.innerText = `0x${Number(reg[k][inner]).toString(16).padStart(16, 0).toUpperCase()}`;\n        break;\n      default:\n        console.error(`Unaccounted for case: ${inner}`);\n    }\n    row.append(fieldName, value);\n    table.append(row);\n  });\n  return table;\n\n}\nclass Simulator {\n  constructor(target_element) {\n    this.target_element = target_element;\n    this.drawing = _svgdotjs_svg_js__WEBPACK_IMPORTED_MODULE_0__.SVG().addTo(this.target_element).size(\"100%\", \"100%\");\n    this.state = null;\n\n    let halt_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, HALT_SPEC, \"HALT\", [], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"HALT\", { has: true, updateState: () => genRegStateTable(this.state, \"halt\") });\n    let cause_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, CAUSE_SPEC, \"CAUSE\", [], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"CAUSE\", { has: true, updateState: () => genRegStateTable(this.state, \"cause_reg\") });\n    let epc_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, EPC_SPEC, \"EPC\", [], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"EPC\", { has: true, updateState: () => genRegStateTable(this.state, \"epc_reg\") });\n    let pc = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, PC_SPEC, \"PC\",\n      [\n        new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this,\n          [\n            PC_SPEC.x + PC_SPEC.w, PC_SPEC.y + PC_SPEC.h / 2,\n            I_MEM_SPEC.x, PC_SPEC.y + PC_SPEC.h / 2\n          ],\n          _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH,\n        ),\n        new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this,\n          [\n            PC_SPEC.x + PC_SPEC.w + 0.005, PC_SPEC.y + PC_SPEC.h / 2,\n            PC_SPEC.x + PC_SPEC.w + 0.005, PC_ADDER_SPEC.y + PC_ADDER_SPEC.h / 4,\n            PC_ADDER_SPEC.x, PC_ADDER_SPEC.y + PC_ADDER_SPEC.h / 4\n          ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {start: true, end: true }\n        )\n      ]\n      , _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"reg\", { has: true, updateState: () => genRegStateTable(this.state, \"pc\") });\n    let is_branch_and = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, BRANCH_AND_SPEC, \"AND\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        BRANCH_AND_SPEC.x, BRANCH_AND_SPEC.cy,\n        PC_MUX_SPEC.cx, BRANCH_AND_SPEC.cy,\n        PC_MUX_SPEC.cx, PC_MUX_SPEC.y,\n      ])], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.AND);\n    let pc_mux = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, PC_MUX_SPEC, \"Mux\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this,\n        [\n          PC_MUX_SPEC.rx, PC_MUX_SPEC.cy,\n          PC_SPEC.x, PC_MUX_SPEC.y + PC_MUX_SPEC.h / 2\n        ]\n      )\n    ]);\n    let i_mem = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, I_MEM_SPEC, \"Instruction\\nMemory\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        I_MEM_SPEC.x + I_MEM_SPEC.w, I_MEM_SPEC.y + I_MEM_SPEC.h / 2,\n        IF_ID_REG_SPEC.x, I_MEM_SPEC.y + I_MEM_SPEC.h / 2\n      ])\n    ]);\n    let pc_adder = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, PC_ADDER_SPEC, \"Add\", [\n      /* Adder to IF_ID_REG */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this,\n        [\n          PC_ADDER_SPEC.x + PC_ADDER_SPEC.w, PC_ADDER_SPEC.y + PC_ADDER_SPEC.h / 2,\n          IF_ID_REG_SPEC.x, PC_ADDER_SPEC.y + PC_ADDER_SPEC.h / 2\n        ]),\n      /* Adder to PC mux */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this,\n        [\n          (PC_ADDER_SPEC.x + PC_ADDER_SPEC.w + IF_ID_REG_SPEC.x) / 2, PC_ADDER_SPEC.y + PC_ADDER_SPEC.h / 2,\n          (PC_ADDER_SPEC.x + PC_ADDER_SPEC.w + IF_ID_REG_SPEC.x) / 2, PC_ADDER_SPEC.y - PC_ADDER_SPEC.h / 2,\n          (PC_MUX_SPEC.x - PC_MUX_SPEC.w / 2), PC_ADDER_SPEC.y - PC_ADDER_SPEC.h / 2,\n          (PC_MUX_SPEC.x - PC_MUX_SPEC.w / 2), PC_MUX_SPEC.y + PC_MUX_SPEC.h / 4,\n          PC_MUX_SPEC.x, PC_MUX_SPEC.y + PC_MUX_SPEC.h / 4,\n        ]\n      ),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, PC_ADDER_SPEC.x - PC_ADDER_SPEC.w / 3, PC_ADDER_SPEC.x, PC_ADDER_SPEC.by - PC_ADDER_SPEC.h / 5, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, startText: \"4\" })\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.ARITH);\n    let if_id_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, IF_ID_REG_SPEC, \"IF/ID\", [\n      /* Reg read 1 */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        IF_ID_REG_SPEC.x + IF_ID_REG_SPEC.w, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5,\n        REG_FILE_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, endText: \" read_1\" }\n      ),\n      /* TODO: Reg read 2*/\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        IF_ID_REG_SPEC.x + IF_ID_REG_SPEC.w, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5,\n        REG_FILE_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, endText: \" read_2\" }),\n      /* Vertical line holding instruction  */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, DECODE_CONTROL_SPEC.y + DECODE_CONTROL_SPEC.h / 2,\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h * 2 / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: false }),\n      /* To Control */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, DECODE_CONTROL_SPEC.cy,\n        DECODE_CONTROL_SPEC.x, DECODE_CONTROL_SPEC.cy,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      /* To Sign Extend */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, SIGN_EXT_SPEC.cy,\n        SIGN_EXT_SPEC.x, SIGN_EXT_SPEC.cy,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      /* Instr[20:16] */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h / 3,\n        ID_EX_REG_SPEC.x, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      /* Instr[15:11] */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (IF_ID_REG_SPEC.rx + REG_FILE_SPEC.x) / 2, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h * 2 / 3,\n        ID_EX_REG_SPEC.x, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h * 2 / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      /* PC Plus 4 */\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        IF_ID_REG_SPEC.rx, PC_ADDER_SPEC.cy,\n        (IF_ID_REG_SPEC.rx + BRANCH_TARGET_ADDER_SPEC.x) / 2, PC_ADDER_SPEC.cy,\n        (IF_ID_REG_SPEC.rx + BRANCH_TARGET_ADDER_SPEC.x) / 2, BRANCH_TARGET_ADDER_SPEC.y + BRANCH_TARGET_ADDER_SPEC.h / 3,\n        BRANCH_TARGET_ADDER_SPEC.x, BRANCH_TARGET_ADDER_SPEC.y + BRANCH_TARGET_ADDER_SPEC.h / 3,\n\n      ])\n      /* T*/\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"\", {\n      has: true, description: \"<p>Fetch/Decode Register</p><p>Buffers State between fetch stage and Decode stage</p>\", updateState: () => {\n        return genRegStateTable(this.state, \"if_id_reg\");\n      }\n    }\n    );\n    let reg_file = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, REG_FILE_SPEC, \"Reg File\", [\n      /* Reg data 1*/\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, REG_FILE_SPEC.rx, ID_EX_REG_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, startText: \"reg_1\" }),\n      /* To cmp 1 */\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.vertical(this, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5, CMP_SPEC.by, CMP_SPEC.x + CMP_SPEC.w / 3, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      /* Reg data 2*/\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, REG_FILE_SPEC.rx, ID_EX_REG_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { end: true, startText: \"reg_2\" }),\n      /* To cmp 2 */\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.vertical(this, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5, CMP_SPEC.by, CMP_SPEC.x + CMP_SPEC.w * 2 / 3, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"\", {\n      has: true, description: \"<p>Register File</p><p>This component holds the data the processor needs to work with immediately</p>\", updateState: () => {\n        let regs = this.state.reg_file.current_map;\n        let keys = Object.keys(regs).sort();\n        let table = document.createElement(\"table\");\n        keys.forEach(k => {\n          let row = document.createElement(\"tr\");\n          let regName = document.createElement(\"td\");\n          regName.innerText = `${k}`;\n          let valueHex = document.createElement(\"td\");\n          valueHex.innerText = `0x${Number(regs[k]).toString(16).padStart(8, 0).toUpperCase()}`;\n          row.append(regName, valueHex);\n          table.append(row);\n        });\n        return table;\n        // Get register state\n        // produce table\n      }\n    });\n\n    let sign_extend = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, SIGN_EXT_SPEC, \"Sign\\nExtend\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, SIGN_EXT_SPEC.rx, ID_EX_REG_SPEC.x, SIGN_EXT_SPEC.cy),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (CMP_SPEC.rx + ID_EX_REG_SPEC.x) / 2, SIGN_EXT_SPEC.cy,\n        (CMP_SPEC.rx + ID_EX_REG_SPEC.x) / 2, (REG_FILE_SPEC.y + CMP_SPEC.by) / 2,\n        (CMP_SPEC.x + REG_FILE_SPEC.cx) / 2, (REG_FILE_SPEC.y + CMP_SPEC.by) / 2,\n        (CMP_SPEC.x + REG_FILE_SPEC.cx) / 2, LEFT_SHIFT_2_SPEC.cy,\n        LEFT_SHIFT_2_SPEC.rx, LEFT_SHIFT_2_SPEC.cy,\n      ])\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.CIRCLE);\n\n    let left_shift_2 = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, LEFT_SHIFT_2_SPEC, \"<<2\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        LEFT_SHIFT_2_SPEC.cx, LEFT_SHIFT_2_SPEC.y,\n        LEFT_SHIFT_2_SPEC.cx, BRANCH_TARGET_ADDER_SPEC.y + BRANCH_TARGET_ADDER_SPEC.h * 2 / 3,\n        BRANCH_TARGET_ADDER_SPEC.x, BRANCH_TARGET_ADDER_SPEC.y + BRANCH_TARGET_ADDER_SPEC.h * 2 / 3,\n\n      ])\n    ]);\n\n    let bt_adder = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, BRANCH_TARGET_ADDER_SPEC, \"Add\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        BRANCH_TARGET_ADDER_SPEC.rx, BRANCH_TARGET_ADDER_SPEC.cy,\n        (BRANCH_TARGET_ADDER_SPEC.rx + ID_EX_REG_SPEC.x) / 2, BRANCH_TARGET_ADDER_SPEC.cy,\n        (BRANCH_TARGET_ADDER_SPEC.rx + ID_EX_REG_SPEC.x) / 2, BRANCH_AND_SPEC.y - BRANCH_AND_SPEC.h / 5,\n        (PC_MUX_SPEC.x - PC_MUX_SPEC.w * 4 / 3), BRANCH_AND_SPEC.y - BRANCH_AND_SPEC.h / 5,\n        (PC_MUX_SPEC.x - PC_MUX_SPEC.w * 4 / 3), PC_MUX_SPEC.y + PC_MUX_SPEC.h * 2 / 3,\n        (PC_MUX_SPEC.x), PC_MUX_SPEC.y + PC_MUX_SPEC.h * 2 / 3,\n      ]),\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.ARITH);\n\n    let cmp = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, CMP_SPEC, \"Cmp\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        CMP_SPEC.cx, CMP_SPEC.y,\n        CMP_SPEC.cx, BRANCH_AND_SPEC.y + BRANCH_AND_SPEC.h * 2 / 3,\n        BRANCH_AND_SPEC.rx, BRANCH_AND_SPEC.y + BRANCH_AND_SPEC.h * 2 / 3\n      ])\n    ]);\n\n    let decode_control = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, DECODE_CONTROL_SPEC, \"Control\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        DECODE_CONTROL_SPEC.cx, DECODE_CONTROL_SPEC.y,\n        DECODE_CONTROL_SPEC.cx, BRANCH_AND_SPEC.y + BRANCH_AND_SPEC.h / 3,\n        BRANCH_AND_SPEC.rx, BRANCH_AND_SPEC.y + BRANCH_AND_SPEC.h / 3,\n      ],\n        _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH,\n        { end: true },\n        { color: CONTROL_OUTLINE }\n      ),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, DECODE_CONTROL_SPEC.rx, (DECODE_CONTROL_SPEC.rx + (ID_EX_REG_SPEC.x - DECODE_CONTROL_SPEC.rx) * (4 / 5)), DECODE_CONTROL_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: false }, { color: CONTROL_OUTLINE }),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.vertical(this, ID_EX_REG_WB_SPEC.cy, ID_EX_REG_EX_SPEC.cy, (DECODE_CONTROL_SPEC.rx + (ID_EX_REG_SPEC.x - DECODE_CONTROL_SPEC.rx) * (4 / 5)), _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: false }, { color: CONTROL_OUTLINE }),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, (DECODE_CONTROL_SPEC.rx + (ID_EX_REG_SPEC.x - DECODE_CONTROL_SPEC.rx) * (4 / 5)), ID_EX_REG_WB_SPEC.x, ID_EX_REG_WB_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }, { color: CONTROL_OUTLINE }),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, (DECODE_CONTROL_SPEC.rx + (ID_EX_REG_SPEC.x - DECODE_CONTROL_SPEC.rx) * (4 / 5)), ID_EX_REG_MEM_SPEC.x, ID_EX_REG_MEM_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }, { color: CONTROL_OUTLINE }),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, (DECODE_CONTROL_SPEC.rx + (ID_EX_REG_SPEC.x - DECODE_CONTROL_SPEC.rx) * (4 / 5)), ID_EX_REG_EX_SPEC.x, ID_EX_REG_EX_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }, { color: CONTROL_OUTLINE })\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.CIRCLE, \"control\");\n\n    let id_ex_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ID_EX_REG_SPEC, \"ID/EX\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_SPEC.rx, REG_DEST_MUX_SPEC.x, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h / 3),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_SPEC.rx, REG_DEST_MUX_SPEC.x, SIGN_EXT_SPEC.by + SIGN_EXT_SPEC.h * 2 / 3),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_SPEC.rx, ALU_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_SPEC.rx, ALU_OP_2_MUX_SPEC.x, ALU_OP_2_MUX_SPEC.y + ALU_OP_2_MUX_SPEC.h * 2 / 3),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        ID_EX_REG_SPEC.rx, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5,\n        ID_EX_REG_SPEC.rx + (ALU_OP_2_MUX_SPEC.x - ID_EX_REG_SPEC.rx) / 3, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5,\n        ID_EX_REG_SPEC.rx + (ALU_OP_2_MUX_SPEC.x - ID_EX_REG_SPEC.rx) / 3, ALU_OP_2_MUX_SPEC.y + ALU_OP_2_MUX_SPEC.h / 3,\n        ALU_OP_2_MUX_SPEC.x, ALU_OP_2_MUX_SPEC.y + ALU_OP_2_MUX_SPEC.h / 3,\n      ]),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (ALU_OP_2_MUX_SPEC.x + ID_EX_REG_SPEC.rx) / 2, ALU_OP_2_MUX_SPEC.y + ALU_OP_2_MUX_SPEC.h / 3,\n        (ALU_OP_2_MUX_SPEC.x + ID_EX_REG_SPEC.rx) / 2, D_MEM_SPEC.by - D_MEM_SPEC.h / 7,\n        EX_MEM_REG_SPEC.x, D_MEM_SPEC.by - D_MEM_SPEC.h / 7,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (ID_EX_REG_SPEC.rx + MULDIV_SPEC.x) / 2.1, REG_FILE_SPEC.y + REG_FILE_SPEC.h / 5,\n        (ID_EX_REG_SPEC.rx + MULDIV_SPEC.x) / 2.1, MULDIV_SPEC.y + MULDIV_SPEC.h / 3,\n        MULDIV_SPEC.x, MULDIV_SPEC.y + MULDIV_SPEC.h / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (ID_EX_REG_SPEC.rx + (ALU_OP_2_MUX_SPEC.x - ID_EX_REG_SPEC.rx) / 3), REG_FILE_SPEC.y + REG_FILE_SPEC.h * 2 / 5,\n        (ID_EX_REG_SPEC.rx + (ALU_OP_2_MUX_SPEC.x - ID_EX_REG_SPEC.rx) / 3), MULDIV_SPEC.y + MULDIV_SPEC.h * 2 / 3,\n        MULDIV_SPEC.x, MULDIV_SPEC.y + MULDIV_SPEC.h * 2 / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true })\n    ], (_e) => {\n    }, _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, { has: true, updateState: () => genRegStateTable(this.state, \"id_ex_reg\") });\n\n    let id_ex_reg_wb = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ID_EX_REG_WB_SPEC, \"\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_WB_SPEC.rx, EX_MEM_REG_SPEC.x, ID_EX_REG_WB_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE })\n    ]);\n\n    let id_ex_reg_mem = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ID_EX_REG_MEM_SPEC, \"\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ID_EX_REG_MEM_SPEC.rx, EX_MEM_REG_SPEC.x, ID_EX_REG_MEM_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE })\n    ]);\n\n    let id_ex_reg_ex = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ID_EX_REG_EX_SPEC, \"\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        ID_EX_REG_EX_SPEC.rx, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h * 3 / 4,\n        ALU_OP_2_MUX_SPEC.cx, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h * 3 / 4,\n        ALU_OP_2_MUX_SPEC.cx, ALU_OP_2_MUX_SPEC.y,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        ID_EX_REG_EX_SPEC.rx, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h / 4,\n        ALU_SPEC.rx + (EX_MEM_REG_SPEC.x - ALU_SPEC.rx) / 3, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h / 4,\n        ALU_SPEC.rx + (EX_MEM_REG_SPEC.x - ALU_SPEC.rx) / 3, REG_DEST_MUX_SPEC.by + REG_DEST_MUX_SPEC.h / 4,\n        REG_DEST_MUX_SPEC.cx, REG_DEST_MUX_SPEC.by + REG_DEST_MUX_SPEC.h / 4,\n        REG_DEST_MUX_SPEC.cx, REG_DEST_MUX_SPEC.by,\n\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        ID_EX_REG_EX_SPEC.rx, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h * 1 / 2,\n        ALU_SPEC.rx + (EX_MEM_REG_SPEC.x - ALU_SPEC.rx) * 2 / 3, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h * 1 / 2,\n        ALU_SPEC.rx + (EX_MEM_REG_SPEC.x - ALU_SPEC.rx) * 2 / 3, ALU_SPEC.by + ALU_SPEC.h / 6,\n        ALU_SPEC.rx - ALU_SPEC.w / 3, ALU_SPEC.by + ALU_SPEC.h / 6,\n        ALU_SPEC.rx - ALU_SPEC.w / 3, ALU_SPEC.by * 0.939,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MULDIV_SPEC.cx, ID_EX_REG_EX_SPEC.y + ID_EX_REG_EX_SPEC.h * 1 / 2,\n        MULDIV_SPEC.cx, MULDIV_SPEC.y\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH,\n        { start: true, end: true },\n        { color: CONTROL_OUTLINE })\n    ]);\n\n    let muldiv = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, MULDIV_SPEC, \"MULDIV\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, MULDIV_SPEC.rx, EX_MEM_REG_SPEC.x, MULDIV_SPEC.cy),\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX);\n    let alu = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ALU_SPEC, \"ALU\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ALU_SPEC.rx, EX_MEM_REG_SPEC.x, ALU_SPEC.cy)\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.ARITH);\n    let reg_dest_mux = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, REG_DEST_MUX_SPEC, \"Mux\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, REG_DEST_MUX_SPEC.rx, EX_MEM_REG_SPEC.x, REG_DEST_MUX_SPEC.cy)\n    ]);\n    let alu_op_2_mux = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, ALU_OP_2_MUX_SPEC, \"Mux\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, ALU_OP_2_MUX_SPEC.rx, ALU_SPEC.x, ALU_OP_2_MUX_SPEC.cy)\n    ]);\n    let ex_mem_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, EX_MEM_REG_SPEC, \"EX/MEM\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, EX_MEM_REG_SPEC.rx, D_MEM_SPEC.x, ALU_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, endText: \" addr\" }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        (EX_MEM_REG_SPEC.rx + D_MEM_SPEC.x) / 2, ALU_SPEC.cy,\n        (EX_MEM_REG_SPEC.rx + D_MEM_SPEC.x) / 2, D_MEM_SPEC.by + D_MEM_SPEC.h / 4,\n        MEM_WB_REG_SPEC.x, D_MEM_SPEC.by + D_MEM_SPEC.h / 4,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: true, end: true }),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, EX_MEM_REG_SPEC.rx, MEM_WB_REG_SPEC.x, REG_DEST_MUX_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, EX_MEM_REG_SPEC.rx, D_MEM_SPEC.x, D_MEM_SPEC.by - D_MEM_SPEC.h / 7, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {endText: \" data\"}),\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, EX_MEM_REG_SPEC.rx, MEM_WB_REG_SPEC.x, MULDIV_SPEC.cy),\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"\", { has: true, updateState: () => genRegStateTable(this.state, \"ex_mem_reg\") });\n    let ex_mem_reg_wb = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, EX_MEM_REG_WB_SPEC, \"\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, EX_MEM_REG_WB_SPEC.rx, MEM_WB_REG_WB_SPEC.x, EX_MEM_REG_WB_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }, { color: CONTROL_OUTLINE })\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"\");\n    let ex_mem_reg_mem = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, EX_MEM_REG_MEM_SPEC, \"\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        EX_MEM_REG_MEM_SPEC.rx, EX_MEM_REG_MEM_SPEC.y + EX_MEM_REG_MEM_SPEC.h / 3,\n        D_MEM_SPEC.cx, EX_MEM_REG_MEM_SPEC.y + EX_MEM_REG_MEM_SPEC.h / 3,\n        D_MEM_SPEC.cx, D_MEM_SPEC.y\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        EX_MEM_REG_MEM_SPEC.rx, EX_MEM_REG_MEM_SPEC.y + EX_MEM_REG_MEM_SPEC.h * 2 / 3,\n        EX_MEM_REG_MEM_SPEC.rx + (D_MEM_SPEC.x - EX_MEM_REG_MEM_SPEC.rx) / 4, EX_MEM_REG_MEM_SPEC.y + EX_MEM_REG_MEM_SPEC.h * 2 / 3,\n        EX_MEM_REG_MEM_SPEC.rx + (D_MEM_SPEC.x - EX_MEM_REG_MEM_SPEC.rx) / 4, D_MEM_SPEC.by + D_MEM_SPEC.h * 1 / 3,\n        D_MEM_SPEC.cx, D_MEM_SPEC.by + D_MEM_SPEC.h * 1 / 3,\n        D_MEM_SPEC.cx, D_MEM_SPEC.by,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {}, { color: CONTROL_OUTLINE }),\n\n    ]);\n    let dmem = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, D_MEM_SPEC, \"Data\\nMemory\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, D_MEM_SPEC.rx, MEM_WB_REG_SPEC.x, ALU_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true })\n    ]);\n    let mem_wb_reg = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, MEM_WB_REG_SPEC, \"MEM/WB\", [\n      _component__WEBPACK_IMPORTED_MODULE_1__.Connector.horizontal(this, MEM_WB_REG_SPEC.rx, WB_MUX_SPEC.x, ALU_SPEC.cy, _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MEM_WB_REG_SPEC.rx, D_MEM_SPEC.by + D_MEM_SPEC.h / 4,\n        (MEM_WB_REG_SPEC.rx + WB_MUX_SPEC.x) / 2, D_MEM_SPEC.by + D_MEM_SPEC.h / 4,\n        (MEM_WB_REG_SPEC.rx + WB_MUX_SPEC.x) / 2, WB_MUX_SPEC.y + WB_MUX_SPEC.h * 2 / 3,\n        WB_MUX_SPEC.x, WB_MUX_SPEC.y + WB_MUX_SPEC.h * 2 / 3,\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MEM_WB_REG_SPEC.rx, REG_DEST_MUX_SPEC.cy,\n        (MEM_WB_REG_SPEC.rx + WB_MUX_SPEC.x) / 2, REG_DEST_MUX_SPEC.cy,\n        (MEM_WB_REG_SPEC.rx + WB_MUX_SPEC.x) / 2, MEM_WB_REG_SPEC.by + MEM_WB_REG_SPEC.h / 12,\n        (IF_ID_REG_SPEC.rx + (REG_FILE_SPEC.x - IF_ID_REG_SPEC.rx) * 3 / 4), MEM_WB_REG_SPEC.by + MEM_WB_REG_SPEC.h / 12,\n        (IF_ID_REG_SPEC.rx + (REG_FILE_SPEC.x - IF_ID_REG_SPEC.rx) * 3 / 4), REG_FILE_SPEC.y + REG_FILE_SPEC.h * 3 / 5,\n        REG_FILE_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 3 / 5\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, endText: \" reg_addr\"}),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MEM_WB_REG_SPEC.rx, MULDIV_SPEC.cy,\n        1.0 - REG_DEST_MUX_SPEC.w / 5, MULDIV_SPEC.cy,\n        1.0 - REG_DEST_MUX_SPEC.w / 5, 0.9,\n        REG_FILE_SPEC.rx - REG_FILE_SPEC.w / 4, 0.9,\n        REG_FILE_SPEC.rx - REG_FILE_SPEC.w / 4, REG_FILE_SPEC.by\n\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true, endText:\"md_res\" })\n    ], _component__WEBPACK_IMPORTED_MODULE_1__.SHAPE.BOX, \"\", { has: true, updateState: () => genRegStateTable(this.state, \"mem_wb_reg\") });\n    let mem_wb_reg_wb = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, MEM_WB_REG_WB_SPEC, \"\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MEM_WB_REG_WB_SPEC.rx, MEM_WB_REG_WB_SPEC.y + MEM_WB_REG_WB_SPEC.h * 2 / 3,\n        WB_MUX_SPEC.cx, MEM_WB_REG_WB_SPEC.y + MEM_WB_REG_WB_SPEC.h * 2 / 3,\n        WB_MUX_SPEC.cx, WB_MUX_SPEC.y\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, { start: false, end: true }, { color: CONTROL_OUTLINE }),\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        MEM_WB_REG_WB_SPEC.rx, MEM_WB_REG_WB_SPEC.y + MEM_WB_REG_WB_SPEC.h / 3,\n        WB_MUX_SPEC.rx + (1.0 - WB_MUX_SPEC.rx) * 2 / 3, MEM_WB_REG_WB_SPEC.y + MEM_WB_REG_WB_SPEC.h / 3,\n        WB_MUX_SPEC.rx + (1.0 - WB_MUX_SPEC.rx) * 2 / 3, MEM_WB_REG_SPEC.by + (1.0 - MEM_WB_REG_SPEC.by) * 2 / 3,\n        REG_FILE_SPEC.cx, MEM_WB_REG_SPEC.by + (1.0 - MEM_WB_REG_SPEC.by) * 2 / 3,\n        REG_FILE_SPEC.cx, REG_FILE_SPEC.by\n\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {endText: \"w\"}, { color: CONTROL_OUTLINE })\n    ]);\n    let wb_mux = new _component__WEBPACK_IMPORTED_MODULE_1__.Component(this, WB_MUX_SPEC, \"Mux\", [\n      new _component__WEBPACK_IMPORTED_MODULE_1__.Connector(this, [\n        WB_MUX_SPEC.rx, WB_MUX_SPEC.cy,\n        WB_MUX_SPEC.rx + (1.0 - WB_MUX_SPEC.rx) / 3, WB_MUX_SPEC.cy,\n        WB_MUX_SPEC.rx + (1.0 - WB_MUX_SPEC.rx) / 3, MEM_WB_REG_SPEC.by + (MEM_WB_REG_SPEC.h / 8),\n        IF_ID_REG_SPEC.rx + (REG_FILE_SPEC.x - IF_ID_REG_SPEC.rx) * 6 / 7, MEM_WB_REG_SPEC.by + (MEM_WB_REG_SPEC.h / 8),\n        IF_ID_REG_SPEC.rx + (REG_FILE_SPEC.x - IF_ID_REG_SPEC.rx) * 6 / 7, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 4 / 5,\n        REG_FILE_SPEC.x, REG_FILE_SPEC.y + REG_FILE_SPEC.h * 4 / 5,\n\n      ], _component__WEBPACK_IMPORTED_MODULE_1__.PATH_WIDTH, {endText: \" write_data\"})\n    ]);\n\n    this.children = {\n      // Fetch\n      halt: halt_reg,\n      cause: cause_reg,\n      epc: epc_reg,\n      pc: pc,\n      is_branch_and: is_branch_and,\n      pc_mux: pc_mux,\n      i_mem: i_mem,\n      pc_adder: pc_adder,\n      if_id_reg: if_id_reg,\n      // Decode\n      reg_file: reg_file,\n      sign_extend: sign_extend,\n      left_shift_2: left_shift_2,\n      bt_adder: bt_adder,\n      cmp: cmp,\n      decode_control: decode_control,\n\n      id_ex_reg: id_ex_reg,\n      id_ex_reg_wb: id_ex_reg_wb,\n      id_ex_reg_mem: id_ex_reg_mem,\n      id_ex_reg_ex: id_ex_reg_ex,\n\n      // Execute\n      muldiv: muldiv,\n      alu: alu,\n\n      reg_dest_mux: reg_dest_mux,\n      alu_op_2_mux: alu_op_2_mux,\n\n      ex_mem_reg: ex_mem_reg,\n      ex_mem_reg_wb: ex_mem_reg_wb,\n      ex_mem_reg_mem: ex_mem_reg_mem,\n      // Memory\n      d_mem: dmem,\n      mem_wb_reg: mem_wb_reg,\n      mem_wb_reg_wb: mem_wb_reg_wb,\n      // Writeback\n      wb_mux: wb_mux,\n\n    };\n  }\n\n  update(sim_state) {\n    if (sim_state) {\n      this.state = sim_state;\n      for (const key in this.children) {\n        this.children[key].updateToolTip();\n        // Update appearance\n      }\n    }\n  }\n\n  draw() {\n    this.drawing.clear();\n    for (const key in this.children) {\n      this.children[key].draw();\n    }\n  }\n}\n\n\n\n\n\n\n//# sourceURL=webpack://create-wasm-app/./src/sim_render.js?");

/***/ }),

/***/ "./src/state_view.js":
/*!***************************!*\
  !*** ./src/state_view.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"updateUiState\": () => (/* binding */ updateUiState)\n/* harmony export */ });\n/*\n * This module serves solely to draw and\n * update the state held in the rightmost\n * bar.\n *\n * This contains the register and memory state\n * along with the number of cycles elapsed\n *\n * This would also show the current line of \n * source code being executed\n * */\n\n/* cSpell:ignore REG, MEM, VALS, REGVALS, REGTABLE, MEMVALS, regs */\n/* cSpell:enableCompoundWords */\n\nconst REGNAME_MAP = Object.freeze(\n  {\n    \"A0\": 4,\n    \"A1\": 5,\n    \"A2\": 6,\n    \"A3\": 7,\n    \"AT\": 1,\n    \"FP\": 30,\n    \"GP\": 28,\n    \"HI\": 33,\n    \"LO\": 32,\n    \"K0\": 26,\n    \"K1\": 27,\n    \"RA\": 31,\n    \"S0\": 16,\n    \"S1\": 17,\n    \"S2\": 18,\n    \"S3\": 19,\n    \"S4\": 20,\n    \"S5\": 21,\n    \"S6\": 22,\n    \"S7\": 23,\n    \"SP\": 29,\n    \"T0\": 8,\n    \"T1\": 9,\n    \"T2\": 10,\n    \"T3\": 11,\n    \"T4\": 12,\n    \"T5\": 13,\n    \"T6\": 14,\n    \"T7\": 15,\n    \"T8\": 24,\n    \"T9\": 25,\n    \"V0\": 2,\n    \"V1\": 3,\n    \"ZERO\": 0,\n  }\n);\nlet REGTABLE = document.getElementById(\"regtable\");\nlet MEMTABLE = document.getElementById(\"memtable\");\nlet PC = document.getElementById(\"program-counter\");\nlet CYCLES = document.getElementById(\"cycle-counter\");\n\nfunction getU32Hex(i) {\n  return `0x${Number(i).toString(16).padStart(8, 0).toUpperCase()}`;\n}\n\nfunction renderMemView(simState) {\n  let tbody = MEMTABLE.children[0];\n  while (tbody.children.length > 1) {\n    tbody.children[1].remove();\n  }\n  let mem = simState.memory.map;\n  Object.keys(mem).sort().forEach(k => {\n    let row = document.createElement(\"tr\");\n    let mem_slot = document.createElement(\"td\");\n    mem_slot.innerText = getU32Hex(k);\n    let mem_val = document.createElement(\"td\");\n    mem_val.innerText = mem[k].toString();\n    mem_val.classList.add(\"right-align\");\n    let mem_val_hex = document.createElement(\"td\");\n    mem_val_hex.innerText = getU32Hex(mem[k]);\n    mem_val_hex.classList.add(\"right-align\");\n\n    row.append(mem_slot);\n    row.append(mem_val);\n    row.append(mem_val_hex);\n\n    tbody.append(row);\n  });\n}\n\nfunction renderRegisterView(simState) {\n  let tbody = REGTABLE.children[0];\n  while (tbody.children.length > 1) {\n    tbody.children[1].remove();\n  }\n\n  let regs = simState.reg_file.current_map;\n  let keys = Object.keys(regs).sort((a, b) => REGNAME_MAP[a] - REGNAME_MAP[b]);\n  keys.forEach(k => {\n    let row = document.createElement(\"tr\");\n    let reg_name = document.createElement(\"td\");\n    reg_name.innerText = `${k}`;\n    let reg_num = document.createElement(\"td\");\n    reg_num.innerText = `\\$${REGNAME_MAP[k]}`;\n    let value_b10 = document.createElement(\"td\");\n    value_b10.classList.add(\"right-align\");\n    value_b10.innerText = Number(regs[k]).toString(10).padStart(10, \"0\");\n    let value_hex = document.createElement(\"td\");\n    value_hex.classList.add(\"right-align\");\n    value_hex.innerText = getU32Hex(regs[k]);\n\n    row.append(reg_name);\n    row.append(reg_num);\n    row.append(value_b10);\n    row.append(value_hex);\n\n    tbody.append(row);\n  });\n  // Render num cycles\n  // Render PC\n  // Render other register values in table\n  // as hex\n}\n\nfunction renderProgramCounter(simState) {\n  let pc = simState.pc.current_map.PC.U32;\n  PC.firstElementChild.innerText = `PC: ${getU32Hex(pc)}`;\n}\n\nfunction renderCycle(simState) {\n  let cycles = simState.cycles;\n  CYCLES.firstElementChild.innerText = `CYCLES: ${cycles}`;\n}\n\nfunction renderProgramSource(simState) { }\n\n\nfunction updateUiState(simState) {\n  renderRegisterView(simState);\n  renderMemView(simState);\n  renderProgramCounter(simState);\n  renderCycle(simState);\n  renderProgramSource(simState);\n}\n\n\n\n\n//# sourceURL=webpack://create-wasm-app/./src/state_view.js?");

/***/ }),

/***/ "../sim/pkg/mips_sim_bg.wasm":
/*!***********************************!*\
  !*** ../sim/pkg/mips_sim_bg.wasm ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __webpack_instantiate__ = ([WEBPACK_IMPORTED_MODULE_0]) => {\n\treturn __webpack_require__.v(exports, module.id, \"6d63afd8ea9d37962834\", {\n\t\t\"./mips_sim_bg.js\": {\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbg_parse_8217e7299bf72f3d\": WEBPACK_IMPORTED_MODULE_0.__wbg_parse_8217e7299bf72f3d,\n\t\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw\n\t\t}\n\t});\n}\n__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => {\n\ttry {\n\t/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./mips_sim_bg.js */ \"../sim/pkg/mips_sim_bg.js\");\n\tvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([WEBPACK_IMPORTED_MODULE_0]);\n\tvar [WEBPACK_IMPORTED_MODULE_0] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__;\n\tawait __webpack_require__.v(exports, module.id, \"6d63afd8ea9d37962834\", {\n\t\t\"./mips_sim_bg.js\": {\n\t\t\t\"__wbindgen_object_drop_ref\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_object_drop_ref,\n\t\t\t\"__wbg_parse_8217e7299bf72f3d\": WEBPACK_IMPORTED_MODULE_0.__wbg_parse_8217e7299bf72f3d,\n\t\t\t\"__wbindgen_debug_string\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_debug_string,\n\t\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw\n\t\t}\n\t});\n\t__webpack_async_result__();\n\t} catch(e) { __webpack_async_result__(e); }\n}, 1);\n\n//# sourceURL=webpack://create-wasm-app/../sim/pkg/mips_sim_bg.wasm?");

/***/ })

}]);